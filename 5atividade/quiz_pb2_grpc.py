# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import quiz_pb2 as quiz__pb2


class QuizServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Authenticate = channel.unary_unary(
                '/quiz.QuizService/Authenticate',
                request_serializer=quiz__pb2.Student.SerializeToString,
                response_deserializer=quiz__pb2.AuthResponse.FromString,
                )
        self.GetQuestion = channel.unary_unary(
                '/quiz.QuizService/GetQuestion',
                request_serializer=quiz__pb2.Empty.SerializeToString,
                response_deserializer=quiz__pb2.Question.FromString,
                )
        self.SubmitAnswer = channel.unary_unary(
                '/quiz.QuizService/SubmitAnswer',
                request_serializer=quiz__pb2.Answer.SerializeToString,
                response_deserializer=quiz__pb2.Result.FromString,
                )
        self.GetFinalResult = channel.unary_unary(
                '/quiz.QuizService/GetFinalResult',
                request_serializer=quiz__pb2.Empty.SerializeToString,
                response_deserializer=quiz__pb2.FinalResult.FromString,
                )


class QuizServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQuestion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitAnswer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFinalResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QuizServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=quiz__pb2.Student.FromString,
                    response_serializer=quiz__pb2.AuthResponse.SerializeToString,
            ),
            'GetQuestion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQuestion,
                    request_deserializer=quiz__pb2.Empty.FromString,
                    response_serializer=quiz__pb2.Question.SerializeToString,
            ),
            'SubmitAnswer': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitAnswer,
                    request_deserializer=quiz__pb2.Answer.FromString,
                    response_serializer=quiz__pb2.Result.SerializeToString,
            ),
            'GetFinalResult': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFinalResult,
                    request_deserializer=quiz__pb2.Empty.FromString,
                    response_serializer=quiz__pb2.FinalResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'quiz.QuizService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QuizService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/quiz.QuizService/Authenticate',
            quiz__pb2.Student.SerializeToString,
            quiz__pb2.AuthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetQuestion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/quiz.QuizService/GetQuestion',
            quiz__pb2.Empty.SerializeToString,
            quiz__pb2.Question.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitAnswer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/quiz.QuizService/SubmitAnswer',
            quiz__pb2.Answer.SerializeToString,
            quiz__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFinalResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/quiz.QuizService/GetFinalResult',
            quiz__pb2.Empty.SerializeToString,
            quiz__pb2.FinalResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
